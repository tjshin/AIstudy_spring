package com.study.controller;

import static org.junit.jupiter.api.Assertions.fail;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

import com.study.bbs.SpringBbsApplication;

@ExtendWith(SpringExtension.class)
@WebMvcTest(controllers = ReplyController.class)
@ContextConfiguration(classes=SpringBbsApplication.class)
class ReplyControllerTest {
	
	@Autowired
	private MockMvc mvc;

	@Test
	@DisplayName("댓글 목록")
	void testGetList() throws Exception {
		mvc.perform( MockMvcRequestBuilders
	              .get("/bbs/reply/list/{bbsno}/{sno}/{eno}",71,1,3)
	              .accept(MediaType.APPLICATION_JSON))
	              .andDo(print())
	              .andExpect(status().isOk())
	              .andExpect(MockMvcResultMatchers.jsonPath("$.[*].rnum").exists())
	              .andExpect(MockMvcResultMatchers.jsonPath("$.[*].rnum").isNotEmpty());
	}

	@Test
	void testGetPage() {
		fail("Not yet implemented");
	}

	@Test
	void testCreate() {
		fail("Not yet implemented");
	}

	@Test
	@DisplayName("댓글 조회-json결과")
	void testGet() throws Exception {
		mvc.perform(MockMvcRequestBuilders 
                .get("/bbs/reply/{rnum}",2)
                .accept(MediaType.APPLICATION_JSON))
                .andDo(print())
                .andExpect(status().isOk())     
                .andExpect(MockMvcResultMatchers.jsonPath("$.rnum").value(2));		
	}

	@Test
	void testModify() {
		fail("Not yet implemented");
	}

	@Test
	void testRemove() {
		fail("Not yet implemented");
	}

}
